# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hitchhiker.proto

require 'google/protobuf'


descriptor_data = "\n\x10hitchhiker.proto\x12\nhitchhiker\"\x14\n\x12GetSourceIdRequest\"(\n\x13GetSourceIdResponse\x12\x11\n\tsource_id\x18\x01 \x01(\t\"@\n\x13GetDownloadsRequest\x12\x11\n\tclient_id\x18\x01 \x01(\t\x12\x16\n\x0e\x64\x65stination_id\x18\x02 \x01(\t\")\n\x14GetDownloadsResponse\x12\x11\n\tfile_list\x18\x01 \x03(\t\";\n\x13\x44ownloadFileRequest\x12\x11\n\tclient_id\x18\x01 \x01(\t\x12\x11\n\tfile_list\x18\x02 \x03(\t\"F\n\x04\x46ile\x12\x0f\n\x07\x66ile_id\x18\x01 \x01(\t\x12\x11\n\tfile_name\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x0c\n\x04\x62lob\x18\x04 \x01(\x0c\"6\n\x14\x44ownloadFileResponse\x12\x1e\n\x04\x66ile\x18\x01 \x03(\x0b\x32\x10.hitchhiker.File\"T\n\x14MarkDeliveredRequest\x12\x11\n\tclient_id\x18\x01 \x01(\t\x12\x16\n\x0e\x64\x65stination_id\x18\x02 \x01(\t\x12\x11\n\tfile_list\x18\x03 \x03(\t\"\x17\n\x15MarkDeliveredResponse2\xe6\x02\n\x10HitchhikerSource\x12P\n\x0bGetSourceId\x12\x1e.hitchhiker.GetSourceIdRequest\x1a\x1f.hitchhiker.GetSourceIdResponse\"\x00\x12S\n\x0cGetDownloads\x12\x1f.hitchhiker.GetDownloadsRequest\x1a .hitchhiker.GetDownloadsResponse\"\x00\x12S\n\x0c\x44ownloadFile\x12\x1f.hitchhiker.DownloadFileRequest\x1a .hitchhiker.DownloadFileResponse\"\x00\x12V\n\rMarkDelivered\x12 .hitchhiker.MarkDeliveredRequest\x1a!.hitchhiker.MarkDeliveredResponse\"\x00\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Hitchhiker
  GetSourceIdRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hitchhiker.GetSourceIdRequest").msgclass
  GetSourceIdResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hitchhiker.GetSourceIdResponse").msgclass
  GetDownloadsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hitchhiker.GetDownloadsRequest").msgclass
  GetDownloadsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hitchhiker.GetDownloadsResponse").msgclass
  DownloadFileRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hitchhiker.DownloadFileRequest").msgclass
  File = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hitchhiker.File").msgclass
  DownloadFileResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hitchhiker.DownloadFileResponse").msgclass
  MarkDeliveredRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hitchhiker.MarkDeliveredRequest").msgclass
  MarkDeliveredResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hitchhiker.MarkDeliveredResponse").msgclass
end
